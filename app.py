# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10eC5p8XTMyMdthcpDW1XPg4lHQMNWOAM
"""
import streamlit as st
from IPython import get_ipython
from IPython.display import display
import requests
import openai
import time

GITHUB_TOKEN = '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'
OPENAI_API_KEY = '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'

HEADERS = {'Authorization': f'token {GITHUB_TOKEN}'}
openai.api_key = OPENAI_API_KEY

def get_github_profile(username):
    url = f'https://api.github.com/users/{username}'
    response = requests.get(url, headers=HEADERS)
    if response.status_code == 200:
        return response.json()
    else:
        return f"Error: {response.status_code}"

def get_github_repos(username):
    url = f'https://api.github.com/users/{username}/repos'
    response = requests.get(url, headers=HEADERS)
    if response.status_code == 200:
        return response.json()
    else:
        return f"Error: {response.status_code}"

def generate_roast(profile_data, repos_data):
    username = profile_data['login']
    bio = profile_data.get('bio', 'No bio provided')
    followers = profile_data['followers']
    public_repos = profile_data['public_repos']

    repo_details = []
    for repo in repos_data[:4]:
        repo_details.append(f"{repo['name']} - {repo['stargazers_count']} stars, {repo['forks_count']} forks, last updated on {repo['updated_at']}, written in {repo['language']}.")

    prompt = f"""
    You're a sarcastic and witty code reviewer. Here's the GitHub profile of {username}:
    - Bio: {bio}
    - Public repos: {public_repos}
    - Followers: {followers}

    Here are some repos:
    1. {repo_details[0]}
    2. {repo_details[1]}
    3. {repo_details[2]}
    4. {repo_details[3]}

    Generate a funny roast about this user's GitHub profile, roast the user so that he questions his life's choices and also roast his github repositories and make them cry
    """

    try:
            response = openai.chat.completions.create( # Use chat.completions.create for chat models
                model="gpt-4o-mini", # Use gpt-4 instead of gpt-4o-mini-2024-07-18
                messages=[
                    {"role": "system", "content": prompt} # Provide the prompt as a system message
                ],
                max_tokens=500,
                temperature=0.8
            )
    except openai.error.RateLimitError as e: # Correct the exception handling
            print(f"Rate limit exceeded: {e}. Waiting for 10 seconds...")
            time.sleep(10)
            response = openai.chat.completions.create( # Use chat.completions.create for chat models
                model="gpt-3.5-turbo", # Use gpt-3.5-turbo as a fallback
                messages=[
                    {"role": "system", "content": prompt} # Provide the prompt as a system message
                ],
                max_tokens=100,
                temperature=0.8
            )


    return response.choices[0].message.content.strip()

st.title("GitHub Profile Roaster")

username = st.text_input("Enter GitHub username:")

if st.button("Roast"):
    profile_data = get_github_profile(username)
    repos_data = get_github_repos(username)
    if isinstance(profile_data, dict) and isinstance(repos_data, list):
        roast_text = generate_roast(profile_data, repos_data)
        st.write("Roast:", roast_text)
    else:
        st.write("Error fetching GitHub data.")
